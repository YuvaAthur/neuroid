- make Area implement Remote.AreaInt, etc.
- TreeSet or HashSet?
- change naming of sensoryneuroid to 'percept'
- implement tzeng's network: allocate all assemblies in input area and create all UMs then prune connections and count 'em!
- implement dumpdata in conceptArea
- move Concept related files to periphery/ 
- Test new synapse scanning constructs for validity.
- Enable seleciton of dynamic behavior of groups of neurons (delay + membrane characteristic).
- use AxonArbor for dist communication improvement.
- migrate functions into AxonArbor.
? do something about too many updates to the algorithm
- solve problem with constant current
- enable selection of inhibitory connections and other parameters
- set global inhibitory connections
+ conceptualize inhibitory neuroids!
+ two ways of textualization (expression): 1- static-long (getStatus), 2- dynamic-short (toString) ?
+ add count of neuroids in a concept to its string value!
+ print network info in Netowrk.toString at end of program
+ id? naming neuroids? decide by area vector position? decide at time of `attach'ing to area?
+ add deltaT to Area and use if in algo.s et al.
+ Visualize somehow
+ Give inputs
+ determine constants and run test
+ Complete period calculation in Neuroid.updateWeights()
+ add refractory period and reset potential!
+ parallelize (RMI)